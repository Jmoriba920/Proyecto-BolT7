package ies.morilla.ibanez.jesus.boletin7.components;

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.GradientPaint;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Paint;
import java.awt.geom.RoundRectangle2D;

import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JList;
import javax.swing.border.EmptyBorder;

public class JRERoundList extends JList<Object> {
	private static final long serialVersionUID = 1L;
	private int arcw=20; 
    private int arch=20; 
    private Image image=null; 
    private Icon icon; 

     
    public JRERoundList() { 
        setOpaque(false); 
        setBorder(new EmptyBorder(0,5,0,2)); 
        setPreferredSize(new Dimension(100,20)); 
    } 

    @Override
    protected void paintComponent(Graphics g) {
        Graphics2D g2 = (Graphics2D) g.create(); // Create a Graphics2D object
        Paint oldPaint = g2.getPaint();

        RoundRectangle2D.Float r2d = new RoundRectangle2D.Float(
                0, 0, getWidth(), getHeight(), arcw, arch); // Use full width and height
        g2.clip(r2d);

        // Cambiar el color y ajustar el grosor del borde
        g2.setStroke(new BasicStroke(1.5f)); // Grosor del borde
        g2.setPaint(new GradientPaint(0.0f, 0.0f, getBackground(),
                0.0f, getHeight(), getBackground()));
        g2.fillRect(0, 0, getWidth(), getHeight());

        if (getImage() != null) {
            g2.drawImage(getImage(), 5, 2, getHeight() - 3, getHeight() - 3, null);
        }

        // Ajuste del borde
        int borderSize = 2; // Ajusta el tamaño del borde según tus necesidades
        setBorder(new EmptyBorder(borderSize, borderSize, borderSize, borderSize));

        // Cambiar el color y ajustar el grosor del borde
        g2.setStroke(new BasicStroke(1.5f)); // Grosor del borde
        g2.setPaint(new GradientPaint(0.0f, 0.0f, new Color(117, 116, 150),
                0.0f, getHeight(), new Color(117, 116, 150)));
        g2.drawRoundRect(borderSize, borderSize, getWidth() - 2 * borderSize - 1, getHeight() - 2 * borderSize - 1, arcw, arch);

        g2.setPaint(oldPaint);
        g2.dispose(); // Dispose the Graphics2D object
        super.paintComponent(g);
    }

    public int getArcw() {
        return arcw;
    }

    public void setArcw(int arcw) {
        this.arcw = arcw;
    }

    public int getArch() {
        return arch;
    }

    public void setArch(int arch) {
        this.arch = arch;
    }

    public Image getImage() {
        return image;
    }

    public void setImage(Image image) {
        this.image = image;
    }

    public Icon getIcon() {
        return icon;
    }

    public void setIcon(Icon icon) {
        this.icon = icon;
        setImage(((ImageIcon) icon).getImage());
    }

}