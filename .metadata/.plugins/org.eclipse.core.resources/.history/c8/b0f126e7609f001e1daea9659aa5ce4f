package ies.morilla.ibanez.jesus.boletin7.controllers;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.util.List;

import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JList;

import com.opencsv.CSVWriter;

import ies.morilla.ibanez.jesus.boletin7.components.TaskRenderer;
import ies.morilla.ibanez.jesus.boletin7.models.Task;
import ies.morilla.ibanez.jesus.boletin7.querys.TaskDML;
import ies.morilla.ibanez.jesus.boletin7.view.SecondaryWindow_AT;

public class Controller_SecondaryWindowAT implements ActionListener {

	private SecondaryWindow_AT window;
	private JList<Task> taskJList;

	public Controller_SecondaryWindowAT(SecondaryWindow_AT window) {
		super();
		this.window = window;
	}

	@Override
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() instanceof JButton) {

			JButton clickedButton = (JButton) e.getSource();

			if (clickedButton == window.getBtnAddTask()) {
				Task task = new Task();
				task.setTitle(window.getTitleTask());
				task.setDescription(window.getDescription());
				task.setDate(window.getDate());
				task.setStatus(window.getStatus());

				TaskDML.insertTask(task);

				updateJList();

				cleandFields();

			} else if (clickedButton == window.btnEditTask()) {

				Task task = taskJList.getSelectedValue();
				task.setId(task.getId());
				task.setTitle(window.getTitleTask());
				task.setDescription(window.getDescription());
				task.setDate(window.getDate());
				task.setStatus(window.getStatus());

				TaskDML.updateTask(task);

				updateJList();

				cleandFields();
			}
		}
	}

    public static void saveFile() {
        List<Task> taskList = TaskDML.getAllTasks();

        try (FileWriter fileWriter = new FileWriter("tasks.csv", StandardCharsets.ISO_8859_1);
             CSVWriter writer = new CSVWriter(fileWriter, ',', CSVWriter.NO_QUOTE_CHARACTER, CSVWriter.NO_ESCAPE_CHARACTER, "\n")) {

            StringBuilder csvData = new StringBuilder();

            // Escribir los encabezados
            csvData.append("ID,Nombre,Descripción,Fecha,Estado").append("\n");

            // Escribir la información de las tareas
            for (Task task : taskList) {
                csvData.append(task.getId())
                        .append(",")
                        .append(task.getTitle())
                        .append(",")
                        .append(task.getDescription())
                        .append(",")
                        .append(task.getDate())
                        .append(",")
                        .append(task.getStatus())
                        .append("\n");
            }

            writer.writeNext(csvData.toString().split(","));

            System.out.println("Archivo CSV generado con éxito.");
        } catch (IOException e) {
            e.printStackTrace();
            throw new RuntimeException("Error al escribir el archivo CSV", e);
        }
    }

	public void loadFile() {

	}

	public void updateJList() {
		List<Task> taskList = TaskDML.getAllTasks();

		taskJList = window.getTaskList();

		DefaultListModel<Task> listModel = new DefaultListModel<>();

		for (Task task : taskList) {
			listModel.addElement(task);
		}

		taskJList.setModel(listModel);
		taskJList.setCellRenderer(new TaskRenderer(window));
	}

	public void cleandFields() {
		window.setTitleTask("");
		window.setDescription("");
		window.setStatus("Completada");
		window.setTodayDate();
	}

	public void exitApp() {
		window.dispose();
	}
}
